// <auto-generated />
using System;
using DNP_Assignment4_EFC.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DNP_Assignment4_EFC.Migrations
{
    [DbContext(typeof(AssignmentDbContext))]
    partial class AssignmentDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("DNP_Assignment4_EFC.Models.DbUnit.DbAdultFamily", b =>
                {
                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Address", "Id");

                    b.HasIndex("Id");

                    b.ToTable("DbAdultFamily");
                });

            modelBuilder.Entity("DNP_Assignment4_EFC.Models.DbUnit.DbChild", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EyeColor")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("HairColor")
                        .HasColumnType("TEXT");

                    b.Property<int>("Height")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sex")
                        .HasColumnType("TEXT");

                    b.Property<float>("Weight")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Children");
                });

            modelBuilder.Entity("DNP_Assignment4_EFC.Models.DbUnit.DbChildFamily", b =>
                {
                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Address", "Id");

                    b.HasIndex("Id");

                    b.ToTable("DbChildFamily");
                });

            modelBuilder.Entity("DNP_Assignment4_EFC.Models.DbUnit.DbChildInterest", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("Id", "Type");

                    b.HasIndex("Type");

                    b.ToTable("DbChildInterest");
                });

            modelBuilder.Entity("DNP_Assignment4_EFC.Models.DbUnit.DbFamily", b =>
                {
                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<int>("HouseNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StreetName")
                        .HasColumnType("TEXT");

                    b.HasKey("Address");

                    b.ToTable("Families");
                });

            modelBuilder.Entity("DNP_Assignment4_EFC.Models.Unit.Adult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EyeColor")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("HairColor")
                        .HasColumnType("TEXT");

                    b.Property<int>("Height")
                        .HasColumnType("INTEGER");

                    b.Property<string>("JobTitle")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sex")
                        .HasColumnType("TEXT");

                    b.Property<float>("Weight")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Adults");
                });

            modelBuilder.Entity("DNP_Assignment4_EFC.Models.Unit.Interest", b =>
                {
                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("Type");

                    b.ToTable("Interests");
                });

            modelBuilder.Entity("DNP_Assignment4_EFC.Models.Unit.Pet", b =>
                {
                    b.Property<string>("PetId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DbChildId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DbFamilyAddress")
                        .HasColumnType("TEXT");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PetId");

                    b.HasIndex("DbChildId");

                    b.HasIndex("DbFamilyAddress");

                    b.ToTable("Pet");
                });

            modelBuilder.Entity("DNP_Assignment4_EFC.Models.Unit.User", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.HasKey("UserName");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DNP_Assignment4_EFC.Models.DbUnit.DbAdultFamily", b =>
                {
                    b.HasOne("DNP_Assignment4_EFC.Models.DbUnit.DbFamily", "Family")
                        .WithMany("AdultFamily")
                        .HasForeignKey("Address")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DNP_Assignment4_EFC.Models.Unit.Adult", "Adult")
                        .WithMany("AdultFamilies")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adult");

                    b.Navigation("Family");
                });

            modelBuilder.Entity("DNP_Assignment4_EFC.Models.DbUnit.DbChildFamily", b =>
                {
                    b.HasOne("DNP_Assignment4_EFC.Models.DbUnit.DbFamily", "Family")
                        .WithMany("ChildFamily")
                        .HasForeignKey("Address")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DNP_Assignment4_EFC.Models.DbUnit.DbChild", "Child")
                        .WithMany("ChildFamily")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Child");

                    b.Navigation("Family");
                });

            modelBuilder.Entity("DNP_Assignment4_EFC.Models.DbUnit.DbChildInterest", b =>
                {
                    b.HasOne("DNP_Assignment4_EFC.Models.DbUnit.DbChild", "Child")
                        .WithMany("ChildInterest")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DNP_Assignment4_EFC.Models.Unit.Interest", "Interest")
                        .WithMany("ChildInterest")
                        .HasForeignKey("Type")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Child");

                    b.Navigation("Interest");
                });

            modelBuilder.Entity("DNP_Assignment4_EFC.Models.Unit.Pet", b =>
                {
                    b.HasOne("DNP_Assignment4_EFC.Models.DbUnit.DbChild", null)
                        .WithMany("Pets")
                        .HasForeignKey("DbChildId");

                    b.HasOne("DNP_Assignment4_EFC.Models.DbUnit.DbFamily", null)
                        .WithMany("Pets")
                        .HasForeignKey("DbFamilyAddress");
                });

            modelBuilder.Entity("DNP_Assignment4_EFC.Models.DbUnit.DbChild", b =>
                {
                    b.Navigation("ChildFamily");

                    b.Navigation("ChildInterest");

                    b.Navigation("Pets");
                });

            modelBuilder.Entity("DNP_Assignment4_EFC.Models.DbUnit.DbFamily", b =>
                {
                    b.Navigation("AdultFamily");

                    b.Navigation("ChildFamily");

                    b.Navigation("Pets");
                });

            modelBuilder.Entity("DNP_Assignment4_EFC.Models.Unit.Adult", b =>
                {
                    b.Navigation("AdultFamilies");
                });

            modelBuilder.Entity("DNP_Assignment4_EFC.Models.Unit.Interest", b =>
                {
                    b.Navigation("ChildInterest");
                });
#pragma warning restore 612, 618
        }
    }
}
